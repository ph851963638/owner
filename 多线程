线程的状态
进程： 内存正在运行的程序
线程： 进程中的多条运行线索

程序- 代码被执行--被CPU执行
 main  方法= 主线程
 
  希望同时有多段代码在被执行  - 多线程
   为什么要使用多线程：
   1.有些时候，程序客观要求我们模拟出 “多角色”的现象，这个时候要使用多线程来实现
   2.为了提升CPU的资源利用率，运算符合就比较饱满。
   java web的领域的多线程使用： 一般很少会涉及到多线程进行编码，因为很多服务器以及工具帮我们已经实现了
   
   
   多线程的本质：
   其实多线程的本质并不是真的有多段代码在被同时执行，一般是CPU在多个线程间快速切换。
   java 支持实现多实现，不支持多继承，因为推荐使用Runnable接口。
   线程有哪几种状态？
   同步锁：
   数据安全问题；
   数据重复读取；
   导致最后的错误结果；
   如何解决多线程带来的数据安全问题？
   加锁: 一部分代码不能被零散的处理，一旦处理好，别的线程无法推进，CPU只能为一个线程服务，必然影响性能；
   性能-安全
   安全>性能
   
   
  
  
  
